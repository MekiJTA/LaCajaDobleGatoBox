<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="StateMachine" Id="{963f2670-b1fa-404a-9599-e89587cf9076}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM StateMachine
VAR
	bPizzaOnDeck : BOOL;
	bPizzaInOven : BOOL;
	bPizzaDone	 : BOOL;
	
	//timers
	fbMyTimer	 : TON;
	
	bLoadPIzza	: BOOL; // put pizza on input side
	bRemovepizza: BOOL;	//remove pizza off output side
	
	iState 		: DINT;
	sStateDesc	: STRING;
	
	//trigs
	fbMyTrigger_RTRIG	: R_TRIG; //pizza counter
	
	bBuzzer		: BOOL;
	bLight		: BOOL;
	
	iTotalPizzasCooked	: UDINT;

	condition: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//youtube "Learning PLC with ST EP7 - State Machines



IF bPizzaOnDeck AND NOT bPizzaInOven THEN
	bPizzaOnDeck	:= FALSE;
	bPizzaInOven 	:= TRUE;
END_IF

IF bLoadPIzza THEN
	bLoadPizza		:= FALSE;
	bPizzaOnDeck	:= TRUE;
END_IF

IF bRemovePizza THEN
	bPizzaDone		:= FALSE;
	bPizzaOnDeck	:= FALSE;
END_IF

CASE iState OF

	0:	// Wait for pizza in oven
		sStateDesc := 'Waiting on that pizza';
		IF bPizzaInOven THEN		
			iState := 10; //move on
		END_IF
	10: //We just got a pizza!
		sStateDesc := 'Baking that pizza-boi';
		fbMyTimer(IN:=TRUE,PT:=T#3S);
		IF fbMyTimer.Q THEN
			fbMyTimer(IN:=FALSE);
			iState := 20;
		END_IF
		
	20: // Can we move the pizza out? Its going to burn else
	
		IF NOT bPizzaDone THEN
			//simulate conveyor
			bPizzaInOven 	:= FALSE;
			bPizzaDone 		:= TRUE;
			bBuzzer			:= FALSE;

			iState 			:= 30;

		ELSE
			bBuzzer := TRUE;
		END_IF
	
	30: //Pizzas just removed. On output tray
		iTotalPizzasCooked 	:= iTotalPizzasCooked +1;
		iState 				:= 0;  // Go wait for new pizza
	
ELSE
	sStateDesc := 'Invalid state'
;
	
	;
END_CASE



fbMyTimer(IN:=bPizzaInOven,PT:=T#3S);

bBuzzer := fbMyTimer.Q;

fbMyTrigger_RTRIG(clk:=fbMyTimer.Q);

IF fbMyTrigger_RTRIG.Q THEN
	iTotalPizzasCooked := iTotalPizzasCooked +1;
END_IF

]]></ST>
    </Implementation>
    <LineIds Name="StateMachine">
      <LineId Id="78" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="125" Count="3" />
      <LineId Id="60" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="61" Count="2" />
      <LineId Id="104" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="67" Count="2" />
      <LineId Id="103" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="107" Count="1" />
      <LineId Id="114" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="117" Count="1" />
      <LineId Id="112" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="115" Count="1" />
      <LineId Id="110" Count="0" />
      <LineId Id="72" Count="1" />
      <LineId Id="120" Count="1" />
      <LineId Id="74" Count="1" />
      <LineId Id="122" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="81" Count="11" />
      <LineId Id="97" Count="0" />
      <LineId Id="80" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>